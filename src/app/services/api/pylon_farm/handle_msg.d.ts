/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type HandleMsg =
  | {
      receive: Cw20ReceiveMsg;
      [k: string]: unknown;
    }
  | {
      update_config: {
        community_fee?: Decimal | null;
        controller?: HumanAddr | null;
        controller_fee?: Decimal | null;
        deposit_fee?: Decimal | null;
        lock_end?: number | null;
        lock_start?: number | null;
        owner?: HumanAddr | null;
        platform?: HumanAddr | null;
        platform_fee?: Decimal | null;
        [k: string]: unknown;
      };
      [k: string]: unknown;
    }
  | {
      unbond: {
        amount: Uint128;
        asset_token: HumanAddr;
        [k: string]: unknown;
      };
      [k: string]: unknown;
    }
  | {
      register_asset: {
        asset_token: HumanAddr;
        auto_compound: boolean;
        staking_token: HumanAddr;
        weight: number;
        [k: string]: unknown;
      };
      [k: string]: unknown;
    }
  | {
      withdraw: {
        asset_token?: HumanAddr | null;
        [k: string]: unknown;
      };
      [k: string]: unknown;
    }
  | {
      stake: {
        asset_token: HumanAddr;
        [k: string]: unknown;
      };
      [k: string]: unknown;
    }
  | {
      compound: {
        [k: string]: unknown;
      };
      [k: string]: unknown;
    };
export type Uint128 = string;
/**
 * Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.
 *
 * This is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>
 */
export type Binary = string;
export type HumanAddr = string;
/**
 * A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0
 *
 * The greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)
 */
export type Decimal = string;

/**
 * Cw20ReceiveMsg should be de/serialized under `Receive()` variant in a HandleMsg
 */
export interface Cw20ReceiveMsg {
  amount: Uint128;
  msg?: Binary | null;
  sender: HumanAddr;
  [k: string]: unknown;
}
