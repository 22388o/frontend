/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Uint128 = string;
export type HumanAddr = string;
/**
 * Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.
 *
 * This is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>
 */
export type Binary = string;
export type PollStatus = "in_progress" | "passed" | "rejected" | "executed" | "expired";

export interface PollsResponse {
  polls: PollResponse[];
  [k: string]: unknown;
}
export interface PollResponse {
  abstain_votes: Uint128;
  creator: HumanAddr;
  deposit_amount: Uint128;
  description: string;
  end_height: number;
  execute_data?: ExecuteMsg | null;
  id: number;
  link?: string | null;
  no_votes: Uint128;
  staked_amount?: Uint128 | null;
  status: PollStatus;
  title: string;
  total_balance_at_end_poll?: Uint128 | null;
  voters_reward: Uint128;
  yes_votes: Uint128;
  [k: string]: unknown;
}
export interface ExecuteMsg {
  contract: HumanAddr;
  msg: Binary;
  [k: string]: unknown;
}
