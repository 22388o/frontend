/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type HandleMsg =
  | {
      bond: {
        assets: [Asset, Asset];
        compound_rate?: Decimal | null;
        contract: HumanAddr;
        slippage_tolerance?: Decimal | null;
        [k: string]: unknown;
      };
      [k: string]: unknown;
    }
  | {
      bond_hook: {
        asset_token: HumanAddr;
        compound_rate?: Decimal | null;
        contract: HumanAddr;
        prev_staking_token_amount: Uint128;
        staker_addr: HumanAddr;
        staking_token: HumanAddr;
        [k: string]: unknown;
      };
      [k: string]: unknown;
    };
export type Uint128 = string;
export type AssetInfo =
  | {
      token: {
        contract_addr: HumanAddr;
        [k: string]: unknown;
      };
      [k: string]: unknown;
    }
  | {
      native_token: {
        denom: string;
        [k: string]: unknown;
      };
      [k: string]: unknown;
    };
export type HumanAddr = string;
/**
 * A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0
 *
 * The greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)
 */
export type Decimal = string;

export interface Asset {
  amount: Uint128;
  info: AssetInfo;
  [k: string]: unknown;
}
